import{_ as s,c as a,o as n,a as e}from"./app.066eee89.js";const A=JSON.parse('{"title":"Type Casting","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用 as 关键字进行类型转换","slug":"使用-as-关键字进行类型转换","link":"#使用-as-关键字进行类型转换","children":[]},{"level":2,"title":"使用 <> 运算符进行类型转换","slug":"使用-运算符进行类型转换","link":"#使用-运算符进行类型转换","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"advanced-types/type-casting.md"}'),l={name:"advanced-types/type-casting.md"},p=e(`<h1 id="type-casting" tabindex="-1">Type Casting <a class="header-anchor" href="#type-casting" aria-hidden="true">#</a></h1><p>摘要：在本教程中，你将学习 TypeScript 中的类型转换，它允许你将一个变量从一个类型转换成另一个类型。</p><p>JavaScript 没有类型转换的概念，因为变量有动态类型。然而，TypeScript 中的每个变量都有一个类型。<strong>类型转换允许你将一个变量从一个类型转换到另一个类型</strong>。</p><p>在 TypeScript 中，你可以使用 <code>as</code> 关键字或 <code>&lt;&gt;</code> 操作符进行类型转换。</p><h2 id="使用-as-关键字进行类型转换" tabindex="-1">使用 as 关键字进行类型转换 <a class="header-anchor" href="#使用-as-关键字进行类型转换" aria-hidden="true">#</a></h2><p>以下是通过使用 <code>querySelector()</code> 方法选择第一个输入元素</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> input </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input[&quot;type=&quot;text&quot;]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>由于 <code>document.querySelector()</code> 方法的返回类型是 <code>Element</code> 类型，下面的代码会引起编译器错误：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(input</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>原因是 Element 类型中不存在 <code>value</code> 属性。它只存在于 <code>HTMLInputElement</code> 类型上。</p><p><strong>为了解决这个问题，你可以使用类型转换，通过使用 as 关键字将 Element 转换为 <code>HTMLInputElement</code></strong>，像这样：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> input </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input[type=&quot;text&quot;]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ) </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLInputElement</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>现在，<code>input</code> 变量的类型是 <code>HTMLInputElement</code>。所以访问它的 value 属性不会引起任何错误。下面的代码可以工作：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(input</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>另一种将 Element 转换为 <code>HTMLInputElement</code> 的方法是当你访问该属性时，如下所示：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> enteredText </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (input </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLInputElement</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>注意，<code>HTMLInputElement</code> 类型扩展了 <code>HTMLElement</code> 类型，该类型扩展了 <code>Element</code> 类型。当你将 <code>HTMLElement</code> 强制转换为 <code>HTMLInputElement</code> 时，这种类型转换也称为<strong>向下转换（down casting）</strong>。</p><p>还可以向下转换。比如说：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> el</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLElement</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">el </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HTMLInputElement</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>在这个例子中，<code>el</code> 变量的类型是 <code>HTMLElement</code>。但是你可以给它分配一个 <code>HTMLInputElement</code> 类型的实例，因为 <code>HTMLInputElement</code> 类型是 <code>HTMLElement</code> 类型的一个子类。</strong></p><p>将一个变量从 <code>typeA</code> 转换为 <code>typeB</code> 的语法如下：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">typeA</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">typeB</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="使用-运算符进行类型转换" tabindex="-1">使用 &lt;&gt; 运算符进行类型转换 <a class="header-anchor" href="#使用-运算符进行类型转换" aria-hidden="true">#</a></h2><p>除了使用 <code>as</code> 关键字外，你还可以使用 <code>&lt;&gt;</code> 运算符进行类型转换。例如：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> input </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> &lt;</span><span style="color:#FFCB6B;">HTMLInputElement</span><span style="color:#A6ACCD;">&gt;document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input[type=&quot;text&quot;]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(input</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>使用 <code>&lt;&gt;</code> 进行类型转换的语法是：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">typeA</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> &lt;</span><span style="color:#FFCB6B;">typeB</span><span style="color:#A6ACCD;">&gt;a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><ul><li>类型转换允许你将一个变量从一种类型转换为另一种类型。</li><li>使用 <code>as</code> 关键字或 <code>&lt;&gt;</code> 运算符进行类型转换。</li></ul>`,29),o=[p];function t(c,r,i,y,d,D){return n(),a("div",null,o)}const F=s(l,[["render",t]]);export{A as __pageData,F as default};

import{_ as s,c as a,o as n,a as l}from"./app.59ae87fb.js";const A=JSON.parse('{"title":"TypeScript Tuple","description":"","frontmatter":{},"headers":[{"level":2,"title":"TypeScript 元组类型介绍","slug":"typescript-元组类型介绍","link":"#typescript-元组类型介绍","children":[]},{"level":2,"title":"可选的元组元素","slug":"可选的元组元素","link":"#可选的元组元素","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"basis-types/tuple-types.md"}'),p={name:"basis-types/tuple-types.md"},o=l(`<h1 id="typescript-tuple" tabindex="-1">TypeScript Tuple <a class="header-anchor" href="#typescript-tuple" aria-hidden="true">#</a></h1><p>摘要：在本教程中，你将了解 TypeScript 的 Tuple 类型和它的用途。</p><h2 id="typescript-元组类型介绍" tabindex="-1">TypeScript 元组类型介绍 <a class="header-anchor" href="#typescript-元组类型介绍" aria-hidden="true">#</a></h2><p><strong>元组的工作方式与数组类似，但有一些额外的考虑：</strong></p><ul><li><strong>元组中元素的数量是固定的。</strong></li><li><strong>元素的类型是已知的，而且不需要是相同的。</strong></li></ul><p>例如，你可以使用元组来将值表示为 <code>string</code> 和 <code>number</code> 的对：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> skill</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">skill </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Programming</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>元组中的值的顺序是很重要的</strong>。如果你把 <code>skill</code> 元组的值的顺序改为 <code>[5, &quot;Programming&quot;]</code>，你会得到一个错误：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> skill</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">skill </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Programming</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Error：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">error </span><span style="color:#FFCB6B;">TS2322</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Type </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> is not assignable to type </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span></span>
<span class="line"></span></code></pre></div><p><strong>因此，使用元组来表示按特定顺序相关联的数据是一个好习惯。</strong></p><p>例如，可以使用元组来定义一个 RGB 颜色，它总是以三个数字的模式出现：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">(r,g,b)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>例如：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><code>color[0]</code>、<code>color[1]</code> 和 <code>color[2]</code> 将被逻辑地映射为 <code>Red</code>、<code>Green</code> 和 <code>Blue</code> 的颜色值。</p><h2 id="可选的元组元素" tabindex="-1">可选的元组元素 <a class="header-anchor" href="#可选的元组元素" aria-hidden="true">#</a></h2><p>从 TypeScript 3.0 开始，元组可以使用问号(?)后缀指定可选的元素。</p><p>例如，你可以定义一个带有可选的 alpha 通道值的 RGBA 元组。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> bgColor</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> headerColor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">bgColor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">headerColor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>请注意，RGBA 使用红、绿、蓝和 alpha model 来定义颜色。alpha 指定了颜色的不透明度。</p></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><ul><li>Tupple 是一个具有固定数量元素的数组，其类型是已知的。</li></ul>`,24),e=[o];function t(c,r,C,y,D,i){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};

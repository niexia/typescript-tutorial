import{_ as s,c as a,o as n,a as p}from"./app.59ae87fb.js";const F=JSON.parse('{"title":"TypeScript Type Aliases","description":"","frontmatter":{},"headers":[{"level":2,"title":"TypeScript 类型别名介绍","slug":"typescript-类型别名介绍","link":"#typescript-类型别名介绍","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"basis-types/type-aliases.md"}'),l={name:"basis-types/type-aliases.md"},e=p(`<h1 id="typescript-type-aliases" tabindex="-1">TypeScript Type Aliases <a class="header-anchor" href="#typescript-type-aliases" aria-hidden="true">#</a></h1><p>摘要：在本教程中，你将学习如何使用类型别名为类型定义新名称。</p><h2 id="typescript-类型别名介绍" tabindex="-1">TypeScript 类型别名介绍 <a class="header-anchor" href="#typescript-类型别名介绍" aria-hidden="true">#</a></h2><p>类型别名允许你为一个现有的类型创建一个新的名称。下面显示了类型别名的语法：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">alias</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">existingType</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>现有的类型可以是任何有效的 TypeScript 类型。</p><p>以下示例使用类型别名 chars 来代表字符串类型：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chars</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chars</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// same as string type</span></span>
<span class="line"></span></code></pre></div><p><strong>为联合类型创建类型别名是很有用的</strong>。比如说：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">alphanumeric</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> input</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">alphanumeric</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">input </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// valid</span></span>
<span class="line"><span style="color:#A6ACCD;">input </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hi</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// valid</span></span>
<span class="line"><span style="color:#A6ACCD;">input </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Compiler error</span></span>
<span class="line"></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><ul><li>使用类型别名来为现有的类型定一个新名称。</li></ul>`,12),t=[e];function o(c,r,i,y,C,D){return n(),a("div",null,t)}const d=s(l,[["render",o]]);export{F as __pageData,d as default};

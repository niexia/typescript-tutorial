import{_ as e,c as t,o as s,a as p}from"./app.5b445d45.js";const u=JSON.parse('{"title":"TypeScript 类型","description":"","frontmatter":{},"headers":[{"level":2,"title":"在 TypeScript 中的一个类型是什么","slug":"在-typescript-中的一个类型是什么","link":"#在-typescript-中的一个类型是什么","children":[]},{"level":2,"title":"TypeScript 中的类型","slug":"typescript-中的类型","link":"#typescript-中的类型","children":[{"level":3,"title":"基本类型","slug":"基本类型","link":"#基本类型","children":[]},{"level":3,"title":"对象类型","slug":"对象类型","link":"#对象类型","children":[]}]},{"level":2,"title":"TypeScript 中类型的目的","slug":"typescript-中类型的目的","link":"#typescript-中类型的目的","children":[]},{"level":2,"title":"TypeScript 类型的例子","slug":"typescript-类型的例子","link":"#typescript-类型的例子","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"basis-types/typescript-types.md"}'),a={name:"basis-types/typescript-types.md"},l=p(`<h1 id="typescript-类型" tabindex="-1">TypeScript 类型 <a class="header-anchor" href="#typescript-类型" aria-hidden="true">#</a></h1><p>摘要：在本教程中，你将了解 TypeScript 类型和它们的用途。</p><h2 id="在-typescript-中的一个类型是什么" tabindex="-1">在 TypeScript 中的一个类型是什么 <a class="header-anchor" href="#在-typescript-中的一个类型是什么" aria-hidden="true">#</a></h2><p>在 TypeScript 中，<strong>类型是一种方便的方式，用于引用值具有的不同属性和函数。</strong>（a type is a convenient way to refer to the different <strong>properties</strong> and <strong>functions</strong> that a <strong>value</strong> has.）</p><p>值是你可以分配给一个变量的任何东西，例如，一个数字、一个字符串、一个数组、一个对象和一个函数。</p><p>看下面这个值：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Hello</span></span>
<span class="line"></span></code></pre></div><p>当你看这个值时，你可以说它是一个字符串。而且这个值具有字符串所具有的属性和方法。</p><p>例如，<code>&#39;Hello&#39;</code>值有一个名为<code>length</code>的属性，它返回字符的数量。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 5</span></span>
<span class="line"></span></code></pre></div><p>它也有许多方法，如<code>match()</code>、<code>indexOf()</code>和<code>toLocaleUpperCase()</code>。比如：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLocaleUpperCase</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// HELLO</span></span>
<span class="line"></span></code></pre></div><p>如果你看着<code>“Hello”</code>这个值，并通过列出其属性和方法来描述它，那将是很不方便的。</p><p>一种更简短的方法是为值分配一个类型。在这个例子中，你说<code>“Hello”</code>是一个字符串。然后，你就知道可以使用字符串的属性和方法来处理值<code>“Hello”</code>。</p><p><strong>总之，在 TypeScript 中：</strong></p><ul><li><strong>类型是一个标签，用于描述一个值具有的不同属性和方法。</strong></li><li><strong>每个值都有一个类型。</strong></li></ul><h2 id="typescript-中的类型" tabindex="-1">TypeScript 中的类型 <a class="header-anchor" href="#typescript-中的类型" aria-hidden="true">#</a></h2><p>TypeScript 继承了 JavaScript 的内置类型。TypeScript 的类型分为：</p><ul><li>基本类型 Primitive types</li><li>对象类型 Object types</li></ul><h3 id="基本类型" tabindex="-1">基本类型 <a class="header-anchor" href="#基本类型" aria-hidden="true">#</a></h3><p>以下说明了 TypeScript 中的原始类型：</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>string</td><td>代表文本数据</td></tr><tr><td>number</td><td>代表数字</td></tr><tr><td>boolean</td><td>有 true 和 false</td></tr><tr><td>null</td><td>只有一个值：null</td></tr><tr><td>undefined</td><td>有一个值：number，它是一个未初始化的变量的默认值</td></tr><tr><td>symbol</td><td>代表一个唯一的常量值</td></tr></tbody></table><h3 id="对象类型" tabindex="-1">对象类型 <a class="header-anchor" href="#对象类型" aria-hidden="true">#</a></h3><p>对象类型是指函数、数组、类等。稍后，你将学习如何创建自定义对象类型。</p><h2 id="typescript-中类型的目的" tabindex="-1">TypeScript 中类型的目的 <a class="header-anchor" href="#typescript-中类型的目的" aria-hidden="true">#</a></h2><p><strong>TypeScript 中的类型有两个主要目的：</strong></p><ul><li><strong>首先，TypeScript 编译器使用类型来分析你的代码是否有错误。</strong></li><li><strong>第二，类型让你可以了解哪些值与变量有关。</strong></li></ul><h2 id="typescript-类型的例子" tabindex="-1">TypeScript 类型的例子 <a class="header-anchor" href="#typescript-类型的例子" aria-hidden="true">#</a></h2><p>下面的例子使用 <code>querySelector()</code> 方法来选择 <code>&lt;h1&gt;</code> 元素。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> heading </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">h1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)。</span></span>
<span class="line"></span></code></pre></div><p>TypeScript 编译器知道<code>heading</code>的类型是<code>HTMLHeadingElement</code>：</p><img src="https://www.typescripttutorial.net/wp-content/uploads/2020/09/TypeScript-types-example-1.png"><p>所以它显示了一个<code>heading</code>可以访问的<code>HTMLHeadingElement</code>类型的方法列表：</p><img src="https://www.typescripttutorial.net/wp-content/uploads/2020/09/TypeScript-types-properties-and-methods.png"><p>如果你试图访问一个不存在的属性或方法，TypeScript 编译器将显示一个错误。比如说：</p><img src="https://www.typescripttutorial.net/wp-content/uploads/2020/09/TypeScript-types-error.png"><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><ul><li>TypeScript 中的每个值都有一个类型。</li><li>类型是一个标签，描述了一个值的属性和方法。</li><li>TypeScript 编译器使用类型来分析你的代码，以寻找 bug 和错误。</li></ul>`,38),n=[l];function r(o,c,i,d,y,h){return s(),t("div",null,n)}const D=e(a,[["render",r]]);export{u as __pageData,D as default};

import{_ as s,c as a,o as l,a as e}from"./app.066eee89.js";const F=JSON.parse('{"title":"hello-world","description":"","frontmatter":{},"headers":[{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"解答","slug":"解答","link":"#解答","children":[]}],"relativePath":"challenge/warm/hello-world.md"}'),n={name:"challenge/warm/hello-world.md"},o=e(`<h1 id="hello-world" tabindex="-1">hello-world <a class="header-anchor" href="#hello-world" aria-hidden="true">#</a></h1><blockquote><p><a href="https://github.com/type-challenges/type-challenges/blob/main/questions/00013-warm-hello-world/README.md" target="_blank" rel="noreferrer">https://github.com/type-challenges/type-challenges/blob/main/questions/00013-warm-hello-world/README.md</a></p></blockquote><p>这个简单的提问希望让你可以快速上手 Type Challenges。在这里，我们使用了一些神奇的技巧让 TypeScript 通过自身的类型系统来实现自动判题。</p><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-hidden="true">#</a></h2><p>在这个挑战中，你需要修改下方的代码使得测试通过（使其没有类型错误）。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 期望是一个 string 类型</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloWorld</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 你需要使得如下这行不会抛出异常</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Expect</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Equal</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">HelloWorld</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="解答" tabindex="-1">解答 <a class="header-anchor" href="#解答" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloWorld</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"></span></code></pre></div>`,9),t=[o];function p(c,r,i,d,h,y){return l(),a("div",null,t)}const g=s(n,[["render",p]]);export{F as __pageData,g as default};

import{_ as s,c as l,o as n,a}from"./app.cde3d90f.js";const h=JSON.parse('{"title":"TypeScript while","description":"","frontmatter":{},"headers":[{"level":2,"title":"TypeScript while 语句介绍","slug":"typescript-while-语句介绍","link":"#typescript-while-语句介绍","children":[]},{"level":2,"title":"TypeScript while 语句示例","slug":"typescript-while-语句示例","link":"#typescript-while-语句示例","children":[{"level":3,"title":"TypeScript while：简单示例","slug":"typescript-while-简单示例","link":"#typescript-while-简单示例","children":[]}]},{"level":2,"title":"TypeScript while 实用示例","slug":"typescript-while-实用示例","link":"#typescript-while-实用示例","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"control-flow-statements/typescript-while.md"}'),e={name:"control-flow-statements/typescript-while.md"},p=a(`<h1 id="typescript-while" tabindex="-1">TypeScript while <a class="header-anchor" href="#typescript-while" aria-hidden="true">#</a></h1><p>摘要：在本教程中，你将学习如何使用 TypeScript while 语句创建一个循环。</p><h2 id="typescript-while-语句介绍" tabindex="-1">TypeScript while 语句介绍 <a class="header-anchor" href="#typescript-while-语句介绍" aria-hidden="true">#</a></h2><p><code>while</code> 语句允许你创建一个循环，只要条件为 <code>true</code>，就执行一块代码。</p><p>以下显示了 TypeScript while 语句的语法：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;">(condition) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// do something</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>while 语句在每个循环迭代之前计算条件。</p><p>如果 condition 求值为 <code>true</code>，则 while 语句将执行其主体中由大括号（<code>{}</code>）包围的代码。</p><p>当条件评估为 <code>false</code> 时，继续执行 while 语句之后的语句。</p><p>由于 while 语句<strong>在执行其主体之前计算 <code>condition</code></strong>，因此 while 循环也称为预测试循环（pretest loop）。</p><p>为了根据另一个条件不成熟地打破循环，你使用 <code>if</code> 和 <code>break</code> 语句：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;">(condition) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// do something</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">anotherCondition</span><span style="color:#F07178;">) </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>如果你想循环多次运行循环，应使用 TypeScript <code>for</code> 语句。</p><h2 id="typescript-while-语句示例" tabindex="-1">TypeScript while 语句示例 <a class="header-anchor" href="#typescript-while-语句示例" aria-hidden="true">#</a></h2><p>让我们举几个使用 TypeScript <code>while</code> 语句的示例。</p><h3 id="typescript-while-简单示例" tabindex="-1">TypeScript while：简单示例 <a class="header-anchor" href="#typescript-while-简单示例" aria-hidden="true">#</a></h3><p>以下示例使用 <code>while</code> 语句将数字输出到控制台，只要它小于 5：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> counter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (counter </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">counter</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">counter</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>输出：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#F78C6C;">4</span></span>
<span class="line"></span></code></pre></div><p>它是如何工作的：</p><ul><li>首先，声明 <code>counter</code> 变量并将其初始化为零。</li><li>然后，在进入循环之前检查 <code>counter</code> 是否小于 5。如果是，则将 <code>counter</code> 输出到控制台并将其增加 1。</li><li>最后，只要 <code>counter</code> 小于 5，重复以上步骤。</li></ul><h2 id="typescript-while-实用示例" tabindex="-1">TypeScript while 实用示例 <a class="header-anchor" href="#typescript-while-实用示例" aria-hidden="true">#</a></h2><p>假设你在 HTML 文档上有以下列表元素：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">ul id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;</span><span style="color:#FFCB6B;">li</span><span style="color:#A6ACCD;">&gt;Item </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;</span><span style="color:#FFCB6B;">li</span><span style="color:#A6ACCD;">&gt;Item </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;</span><span style="color:#FFCB6B;">li</span><span style="color:#A6ACCD;">&gt;Item </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;</span><span style="color:#FFCB6B;">li</span><span style="color:#A6ACCD;">&gt;Item </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>以下示例显示了如何使用 <code>while</code> 语句删除<code>&lt;ul&gt;</code>元素的所有<code>&lt;li&gt;</code>元素：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#list</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (list</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">firstChild) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeChild</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">firstChild</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>它是如何工作的：</p><ul><li>首先，使用 <code>querySelector()</code> 方法通过其 ID 选择 <code>&lt;ul&gt;</code> 元素。</li><li>然后，检查列表的 <code>firstChild</code> 是否可用并删除它。一旦删除第一个子节点，下一个子节点将自动晋升为第一个子节点。因此，<code>while</code> 语句删除列表元素的所有子节点。</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><ul><li>使用 TypeScript <code>while</code> 语句创建一个循环，只要条件为 <code>true</code>，它将运行。</li></ul>`,31),o=[p];function t(c,i,r,y,d,D){return n(),l("div",null,o)}const C=s(e,[["render",t]]);export{h as __pageData,C as default};

import{_ as s,c as a,o as n,a as p}from"./app.cde3d90f.js";const l="/typescript-tutorial/why-typescript-error.png",o="/typescript-tutorial/why-typescript-hint.png",e="/typescript-tutorial/why-typescript-error-in-function-arguments.png",h=JSON.parse('{"title":"为什么选择  TypeScript","description":"","frontmatter":{},"headers":[{"level":2,"title":"为什么使用 TypeScript","slug":"为什么使用-typescript","link":"#为什么使用-typescript","children":[]},{"level":2,"title":"理解 JavaScript 中的动态类型","slug":"理解-javascript-中的动态类型","link":"#理解-javascript-中的动态类型","children":[]},{"level":2,"title":"动态类型的问题","slug":"动态类型的问题","link":"#动态类型的问题","children":[]},{"level":2,"title":"TypeScript 如何解决动态类型的问题","slug":"typescript-如何解决动态类型的问题","link":"#typescript-如何解决动态类型的问题","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"getting-start/why-typescript.md"}'),t={name:"getting-start/why-typescript.md"},c=p(`<h1 id="为什么选择-typescript" tabindex="-1">为什么选择 TypeScript <a class="header-anchor" href="#为什么选择-typescript" aria-hidden="true">#</a></h1><p>摘要：在本教程中，你将了解为什么要使用 TypeScript 而不是 JavaScript，以避免“动态类型”产生的问题。</p><h2 id="为什么使用-typescript" tabindex="-1">为什么使用 TypeScript <a class="header-anchor" href="#为什么使用-typescript" aria-hidden="true">#</a></h2><p>用 TypeScript 有两个主要原因：</p><ul><li>TypeScript 添加了一个类型系统，以帮助你避免 JavaScript 中动态类型的许多问题。</li><li>TypeScript 实现了 JavaScript 的未来功能，也就是 ES Next，所以你今天就可以使用它们。</li></ul><p><strong>本教程重点讨论第一个原因。</strong></p><h2 id="理解-javascript-中的动态类型" tabindex="-1">理解 JavaScript 中的动态类型 <a class="header-anchor" href="#理解-javascript-中的动态类型" aria-hidden="true">#</a></h2><p>JavaScript是动态类型的。与Java或C#等静态类型的语言不同，<strong>值具有类型而不是变量</strong>。比如说：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>从这个值可以看出，它的类型是字符串。另外，下面的值是一个数字。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">2020</span></span>
<span class="line"></span></code></pre></div><p>看下面的例子：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> box</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">box </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">box </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>变量 <code>box</code> 的类型根据分配给它的值而改变。</p><p>为了在运行时找出 <code>box</code> 变量的类型，你可以使用 typeof 操作符：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> box</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;">(box))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// undefined</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">box </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;">(box))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">box </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;">(box))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// number</span></span>
<span class="line"></span></code></pre></div><p>在这个例子中，第一条语句定义了这个变量，但没有赋值。它的类型是 <code>undefined</code>。</p><p>然后，我们将 &quot;Hello&quot;分配给<code>box</code>变量并输出其类型。现在<code>box</code>变量的类型变成了<code>string</code>。</p><p>最后，我们将 100 分配给<code>box</code>变量。这一次，<code>box</code>变量的类型变成了<code>number</code>。</p><p><strong>正如你所看到的，一旦赋值，变量的类型就会改变。</strong></p><p>而且你不需要明确地告诉 JavaScript 类型。JavaScript 会自动从值中推断出类型。</p><p>动态类型提供了灵活性。然而，它们也导致了一些问题。</p><h2 id="动态类型的问题" tabindex="-1">动态类型的问题 <a class="header-anchor" href="#动态类型的问题" aria-hidden="true">#</a></h2><p>假设你有一个函数，根据一个 id 返回一个 <code>product</code> 对象。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getProduct</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Awesome Gadget </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    price</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">99.5</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>下面使用<code>getProduct()</code>函数来检索 id 为 1 的产品，并显示其数据：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> product </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getProduct</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">The product </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> costs $</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">price</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>输出：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">The product undefined costs $99.5</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这并不是我们所期望的那样。</p><p>这段代码的问题是，产品对象没有 <code>Name</code> 属性。它的名字属性中的第一个字母 n 是小写的。</p><p><strong>然而，你只有在运行脚本时才能知道它。</strong></p><p>引用对象上不存在的属性是在 JavaScript 中工作时常见的问题。</p><p>下面的例子定义了一个新函数，将 product 信息输出到控制台。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> showProduct </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">price</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">The product </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> costs </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">price</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">$.</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> product </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getProduct</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">showProduct</span><span style="color:#A6ACCD;">(product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">price</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>输出：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">The product 99.5 costs $Awesome Gadget 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这次我们把参数以错误的顺序传递给<code>showProduct()</code>函数。这是你在使用 JavaScript 时经常遇到的另一个常见问题。</p><p>这就是 TypeScript 发挥作用的原因。</p><h2 id="typescript-如何解决动态类型的问题" tabindex="-1">TypeScript 如何解决动态类型的问题 <a class="header-anchor" href="#typescript-如何解决动态类型的问题" aria-hidden="true">#</a></h2><p>为了解决引用一个对象上不存在的属性的问题，你要做以下步骤：</p><p>首先，用一个 interface 定义产品对象的“形状”。注意，你将在后面的教程中学习 interface 的知识。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Product</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">price</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>第二，明确使用 <code>Product</code> 类型作为<code>getProduct()</code>函数的返回类型。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getProduct</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Product</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Awesome Gadget </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    price</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">99.5</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>当你引用一个不存在的属性时，代码编辑器会立即告诉你：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> product </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getProduct</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">The product </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> costs $</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">price</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>代码编辑器在 <code>Name</code> 属性上突出显示了以下错误：</p><img src="`+l+'"><p>而当你把鼠标光标悬停在错误上时，你会看到一个提示，帮助你解决这个问题：</p><img src="'+o+`"><p>为了解决以错误的顺序传递参数的问题，你可以明确地给函数参数分配类型：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> showProduct </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">price</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">The product </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> costs </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">price</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">$.</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>而当你向<code>showProduct()</code>函数传递错误的参数类型时，你会收到一个错误。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> product </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getProduct</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">showProduct</span><span style="color:#A6ACCD;">(product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">price</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><img src="`+e+'"><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><ul><li>JavaScript 是动态类型的。它提供了灵活性，但也产生了许多问题。</li><li>TypeScript 为 JavaScript 添加了一个可选的类型系统来解决这些问题。</li></ul>',59),r=[c];function y(D,i,F,C,A,d){return n(),a("div",null,r)}const g=s(t,[["render",y]]);export{h as __pageData,g as default};
